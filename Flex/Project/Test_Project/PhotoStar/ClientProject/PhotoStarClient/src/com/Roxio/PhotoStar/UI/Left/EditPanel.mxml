<?xml version="1.0" encoding="utf-8"?>
<SubFunctionPanel xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns="com.Roxio.PhotoStar.UI.Left.*"
	xmlns:ec="com.Roxio.PhotoStar.UI.Left.EditComponent.*"
	implements="com.Roxio.PhotoStar.Mode.IAnimDisplayObject"
	verticalScrollPolicy="auto" horizontalScrollPolicy="off"
	creationComplete="Init()" >
	
	<mx:Script>
		<![CDATA[
			import com.Roxio.PhotoStar.Mode.IAnimDisplayObject;
			import com.Roxio.PhotoStar.UI.Left.EditComponent.EditFunctionPanel;
			import com.Roxio.PhotoStar.UI.LoadAnimController;
			import mx.collections.ArrayCollection;
			
			private const SUB_PANEL_WIDTH:int = 278;
			private const SUB_PANEL_HEIGHT:int = 115;
			private const SEP_LINE_HEIGHT:int = 10;
			private const GAP:int = 5;
			
			private var _panelBtnPair:Array;
			private var _currentPanel:EditFunctionPanel;
			private var _currentLoadPanel:EditFunctionPanel;
			
			private function Init():void
			{
				InitSubPanelArray();
			}
			
			protected override function InitSubPanelArray():void
			{
				// add all button and realting panel to the array pair
				_panelBtnPair = new Array;
				_panelBtnPair.push([transform_button, transform_panel]);
				_panelBtnPair.push([rotate_button, rotate_panel]);
				_panelBtnPair.push([adjustment_button, adjustment_panel]);
				_panelBtnPair.push([filter_button, filter_panel]);
				
				_subPanelArray = new ArrayCollection;
				_subPanelArray.addItem(transform_button);
				_subPanelArray.addItem(rotate_button);
				_subPanelArray.addItem(adjustment_button);
				_subPanelArray.addItem(filter_button);
				
				_localeDependPanelArray = new ArrayCollection;
				_localeDependPanelArray.addItem(transform_button);
				_localeDependPanelArray.addItem(rotate_button);
				_localeDependPanelArray.addItem(adjustment_button);
				_localeDependPanelArray.addItem(filter_button);
				_localeDependPanelArray.addItem(transform_panel);
				_localeDependPanelArray.addItem(rotate_panel);
				_localeDependPanelArray.addItem(adjustment_panel);
				_localeDependPanelArray.addItem(filter_panel);
				
				updateComponentStyle();
			}
			
			protected override function OnClosePanel():void
			{
				CloseCurrentPanel();
			}
			
			private function CloseCurrentPanel():void
			{
				if (_currentPanel != null)
				{
					_currentPanel.ready2Close();
					
					// hide panel
					var animController:LoadAnimController = new LoadAnimController();
					animController.changeObject(_currentPanel, GetRelateObject(_currentPanel), OnHideOldPanelEnd);
					_currentPanel = null;
				}
			}
			
			private function LoadNewPanel(panel:IAnimDisplayObject):void
			{
				var animController:LoadAnimController = new LoadAnimController();
				animController.changeObject(GetRelateObject(panel), panel, OnLoadNewPanelEnd);
			}
			
			private function OnHideOldPanelEnd():void
			{
				// do nothing
			}
			
			private function OnLoadNewPanelEnd():void
			{
				_currentPanel = _currentLoadPanel;
			}
			
			private function OnFunctionBtnClick(event:MouseEvent):void
			{
				_currentLoadPanel = GetRelateObject(event.target as IAnimDisplayObject) as EditFunctionPanel;
				
				if (_currentPanel != null && _currentPanel == _currentLoadPanel)
				{
					return;
				}
				
				CloseCurrentPanel();
				LoadNewPanel(_currentLoadPanel);
			}
			
			private function GetRelateObject(obj:IAnimDisplayObject):IAnimDisplayObject
			{
				for (var i:int = 0; i < _panelBtnPair.length; ++i)
				{
					var pair:Array = _panelBtnPair[i];
					if (pair[0] as IAnimDisplayObject == obj)
					{
						return pair[1] as IAnimDisplayObject;
					}
					else if (pair[1] as IAnimDisplayObject == obj)
					{
						return pair[0] as IAnimDisplayObject;
					}
				}
				return null;
			}
		]]>
	</mx:Script>
	
	<ec:TransformButtom id="transform_button" label="" x="{(this.width - SUB_PANEL_WIDTH) / 2}" y="{GAP}"
		width="{SUB_PANEL_WIDTH}" height="{SUB_PANEL_HEIGHT}" visible="false" click="OnFunctionBtnClick(event)"/>
	<ec:RotateButtom id="rotate_button" label=""
		x="{(this.width - SUB_PANEL_WIDTH) / 2}" y="{sep_transform.y + sep_transform.height + GAP}"
		width="{SUB_PANEL_WIDTH}" height="{SUB_PANEL_HEIGHT}" visible="false" click="OnFunctionBtnClick(event)"/>
	<ec:AdjustmentButtom id="adjustment_button" label=""
		x="{(this.width - SUB_PANEL_WIDTH) / 2}" y="{sep_rotate.y + sep_rotate.height + GAP}"
		width="{SUB_PANEL_WIDTH}" height="{SUB_PANEL_HEIGHT}" visible="false" click="OnFunctionBtnClick(event)"/>
	<ec:FilterButtom id="filter_button" label=""
		x="{(this.width - SUB_PANEL_WIDTH) / 2}" y="{sep_adj.y + sep_adj.height + GAP}"
		width="{SUB_PANEL_WIDTH}" height="{SUB_PANEL_HEIGHT}" visible="false" click="OnFunctionBtnClick(event)"/>
		
	<mx:Image id="sep_transform" x="{transform_button.x}" y="{transform_button.y + transform_button.height - GAP}"
		width="{SUB_PANEL_WIDTH}" height="{SEP_LINE_HEIGHT}"
		source="{resourceManager.getClass('AppPic', 'EditPanelSeparateLine')}"/>
	<mx:Image id="sep_rotate" x="{rotate_button.x}" y="{rotate_button.y + rotate_button.height - GAP}"
		width="{SUB_PANEL_WIDTH}" height="{SEP_LINE_HEIGHT}"
		source="{resourceManager.getClass('AppPic', 'EditPanelSeparateLine')}"/>
	<mx:Image id="sep_adj" x="{adjustment_button.x}" y="{adjustment_button.y + adjustment_button.height - GAP}"
		width="{SUB_PANEL_WIDTH}" height="{SEP_LINE_HEIGHT}"
		source="{resourceManager.getClass('AppPic', 'EditPanelSeparateLine')}"/>
		
	<ec:TransformPanel id="transform_panel" x="{transform_button.x}" y="{transform_button.y}"
		width="{transform_button.width}" height="{transform_button.height}" visible="false"/>
	<ec:RotatePanel id="rotate_panel" x="{rotate_button.x}" y="{rotate_button.y}"
		width="{rotate_button.width}" height="{rotate_button.height}" visible="false"/>	
	<ec:AdjustmentPanel id="adjustment_panel" x="{adjustment_button.x}" y="{adjustment_button.y}"
		width="{adjustment_button.width}" height="{adjustment_button.height}" visible="false"/>	
	<ec:FilterPanel id="filter_panel" x="{filter_button.x}" y="{filter_button.y}"
		width="{filter_button.width}" height="{filter_button.height}" visible="false"/>
		
</SubFunctionPanel>
